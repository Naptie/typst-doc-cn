route: /docs/reference/math/mat/
title: Matrix
description: Documentation for the `mat` function.
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-delim
    name: delim
    children: []
  - id: parameters-rows
    name: rows
    children: []
body:
  kind: func
  content:
    path:
    - mat
    display: Matrix
    keywords: null
    oneliner: A matrix.
    element: true
    details: |-
      <p>A matrix.</p>
      <p>The elements of a row should be separated by commas, while the rows
      themselves should be separated by semicolons. The semicolon syntax merges
      preceding arguments separated by commas into an array. You can also use this
      special syntax of math function calls to define custom functions that take
      2D data.</p>
      <p>Content in cells that are in the same row can be aligned with the <code>&amp;</code> symbol.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>
        1<span class="typ-punct">,</span> 2<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
        2<span class="typ-punct">,</span> 2<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
        <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">down</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">;</span>
        10<span class="typ-punct">,</span> 10<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
      <span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
      </code></pre><div class="preview"><img src="/assets/docs/92c9b3b027c9bc5f7095d691e1690745.png" alt="Preview" width="480" height="190"/></div></div>
    params:
    - name: delim
      details: <p>The delimiter to use.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span>delim<span class="typ-punct">:</span> <span class="typ-str">&quot;[&quot;</span><span class="typ-punct">)</span>
        <span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
        </code></pre><div class="preview"><img src="/assets/docs/3d80c9fc58c9cf9bc7ac411738bcfed4.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - none
      - string
      strings:
      - string: (
        details: <p>Delimit with parentheses.</p>
      - string: '['
        details: <p>Delimit with brackets.</p>
      - string: '{'
        details: <p>Delimit with curly braces.</p>
      - string: '|'
        details: <p>Delimit with vertical bars.</p>
      - string: '||'
        details: <p>Delimit with double vertical bars.</p>
      default: <code><span class="typ-str">&quot;(&quot;</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: rows
      details: <p>An array of arrays with the rows of the matrix.</p>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> data <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-punct">(</span><span class="typ-num">4</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">6</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
        <span class="typ-key">#</span><span class="typ-key">let</span> matrix <span class="typ-op">=</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span><span class="typ-op">..</span>data<span class="typ-punct">)</span>
        <span class="typ-math-delim">$</span> v <span class="typ-escape">:=</span> <span class="typ-pol">matrix</span> <span class="typ-math-delim">$</span>
        </code></pre><div class="preview"><img src="/assets/docs/5005534335c6665583752d586ce09c37.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - array
      strings: []
      default: null
      positional: true
      named: false
      required: true
      variadic: true
      settable: false
    returns:
    - content
    methods: []
    scope: []
children: []
