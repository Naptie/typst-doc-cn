route: /docs/reference/text/raw/
title: 原始文本/代码块
description: Documentation for the `raw` function.
part: null
outline:
  - id: summary
    name: Summary
    children: []
  - id: example
    name: Example
    children: []
  - id: syntax
    name: Syntax
    children: []
  - id: parameters
    name: Parameters
    children:
      - id: parameters-text
        name: text
        children: []
      - id: parameters-block
        name: block
        children: []
      - id: parameters-lang
        name: lang
        children: []
      - id: parameters-align
        name: align
        children: []
body:
  kind: func
  content:
    path:
      - raw
    display: Raw Text / Code
    keywords: null
    oneliner: Raw text with optional syntax highlighting.
    element: true
    details: |-
      <p>带有可选语法高亮的原始文本。</p>
      <p>使用等宽字体逐字显示文本，通常用于将代码嵌入文档中。</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code>Adding <span class="typ-raw">`rbx`</span> to <span class="typ-raw">`rcx`</span> gives
      the desired result.

      <span class="typ-raw">```rust
      fn main() {
          println!(&quot;Hello World!&quot;);
      }
      ```</span>
      </code></pre><div class="preview"><img src="/assets/docs/9311ccec6969c23387e7d99cb4baba55.png" alt="Preview" width="480" height="190"/></div></div>
      <h2 id="syntax">Syntax</h2>
      <p>
      此函数还有一个专用语法。可以将文本括在一个或多个（3+） 反引号 （<code>`</code>） 中。两个反引号生成空的原始文本。如果使用三个以上的反引号，还可以添加语言标记以高亮显示。在原始文本块中，一切照常显示，特别是没有转义文本。
      </p>
    params:
      - name: text
        details: |-
          <p>原始文本块。</p>
          <p>你还可以创造性地使用原始块为你的自动化创建自定义语法。</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-comment">// Parse numbers in raw blocks with the</span>
          <span class="typ-comment">// `mydsl` tag and sum them up.</span>
          <span class="typ-key">#</span><span class="typ-key">show</span> raw<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;mydsl&quot;</span><span class="typ-punct">)</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
            <span class="typ-key">let</span> sum <span class="typ-op">=</span> <span class="typ-num">0</span>
            <span class="typ-key">for</span> part <span class="typ-key">in</span> it<span class="typ-punct">.</span>text<span class="typ-punct">.</span><span class="typ-func">split</span><span class="typ-punct">(</span><span class="typ-str">&quot;+&quot;</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
              sum <span class="typ-op">+=</span> <span class="typ-func">int</span><span class="typ-punct">(</span>part<span class="typ-punct">.</span><span class="typ-func">trim</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
            <span class="typ-punct">}</span>
            sum
          <span class="typ-punct">}</span>

          <span class="typ-raw">```mydsl
          1 + 2 + 3 + 4 + 5
          ```</span>
          </code></pre><div class="preview"><img src="/assets/docs/bde85482e73ea5451d489ec50b6d23ba.png" alt="Preview" width="480" height="190"/></div></div>
        types:
          - string
        strings: []
        default: null
        positional: true
        named: false
        required: true
        variadic: false
        settable: false
      - name: block
        details: |-
          <p>是否将原始文本显示在一个单独的块中。</p>
          <p>
          在标记模式中，使用一个反引号会将此值设置为 <code><span class="typ-key">false</span></code>，使用三个反引号会将其设置为 <code><span class="typ-key">true</span></code>。
          </p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-comment">// Display inline code in a small box</span>
          <span class="typ-comment">// that retains the correct baseline.</span>
          <span class="typ-key">#</span><span class="typ-key">show</span> raw<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">:</span> box<span class="typ-punct">.</span><span class="typ-func">with</span><span class="typ-punct">(</span>
            fill<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">240</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            outset<span class="typ-punct">:</span> <span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            radius<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          <span class="typ-comment">// Display block code in a larger block</span>
          <span class="typ-comment">// with more padding.</span>
          <span class="typ-key">#</span><span class="typ-key">show</span> raw<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">:</span> block<span class="typ-punct">.</span><span class="typ-func">with</span><span class="typ-punct">(</span>
            fill<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">240</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
            inset<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
            radius<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span>
          <span class="typ-punct">)</span>

          With <span class="typ-raw">`rg`</span>, you can search through your files quickly.

          <span class="typ-raw">```bash
          rg &quot;Hello World&quot;
          ```</span>
          </code></pre><div class="preview"><img src="/assets/docs/a8ab63a7c28ae5f0a9100c28126e854f.png" alt="Preview" width="480" height="190"/></div></div>
        types:
          - boolean
        strings: []
        default: <code><span class="typ-key">false</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: lang
        details: |-
          <p>要在其中突出显示语法的语言。</p>
          <p>要在其中突出显示语法的语言。
            除了Markdown中的典型语言标签外，它还分别支持Typst标记和Typst代码的“typ”和“typc”标签。</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-raw">```typ
          This is *Typst!*
          ```</span>
          </code></pre><div class="preview"><img src="/assets/docs/22a1b8ba38fa3f2b7158354d4b0b1e28.png" alt="Preview" width="480" height="190"/></div></div>
        types:
          - none
          - string
        strings: []
        default: <code><span class="typ-key">none</span></code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
      - name: align
        details: |-
          <p>
          原始文本中每行应具有的水平对齐方式。
          如果这不是原始块（如果指定了<code>block: false</code>或在标记模式中使用了单个反引号），则忽略此选项。
          </p>
          </p>
          该选项默认为<code>start</code>，这意味着原始文本默认情况下向块内文本方向的开始对齐，而忽视当前上下文的对齐方式（例如，允许将原始块本身居中显示而不居中其中的文本）。</p>
        example: |-
          <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">raw</span><span class="typ-punct">(</span>align<span class="typ-punct">:</span> center<span class="typ-punct">)</span>

          <span class="typ-raw">```typc
          let f(x) = x
          code = &quot;centered&quot;
          ```</span>
          </code></pre><div class="preview"><img src="/assets/docs/3329ad5b36132aa190d787eb5927b1aa.png" alt="Preview" width="480" height="190"/></div></div>
        types:
          - alignment
        strings: []
        default: <code>start</code>
        positional: false
        named: true
        required: false
        variadic: false
        settable: true
    returns:
      - content
    methods: []
    scope: []
children: []
