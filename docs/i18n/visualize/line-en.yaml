route: /docs/reference/visualize/line/
title: Line
description: Documentation for the `line` function.
part: null
outline:
- id: summary
  name: Summary
  children: []
- id: example
  name: Example
  children: []
- id: parameters
  name: Parameters
  children:
  - id: parameters-start
    name: start
    children: []
  - id: parameters-end
    name: end
    children: []
  - id: parameters-length
    name: length
    children: []
  - id: parameters-angle
    name: angle
    children: []
  - id: parameters-stroke
    name: stroke
    children: []
body:
  kind: func
  content:
    path:
    - line
    display: Line
    keywords: null
    oneliner: A line from one point to another.
    element: true
    details: |-
      <p>A line from one point to another.</p>
      <h2 id="example">Example</h2>
      <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">)</span>

      <span class="typ-func">#</span><span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span>
      <span class="typ-func">#</span><span class="typ-func">line</span><span class="typ-punct">(</span>end<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
      <span class="typ-func">#</span><span class="typ-func">line</span><span class="typ-punct">(</span>
        length<span class="typ-punct">:</span> <span class="typ-num">4cm</span><span class="typ-punct">,</span>
        stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span> <span class="typ-op">+</span> maroon<span class="typ-punct">,</span>
      <span class="typ-punct">)</span>
      </code></pre><div class="preview"><img src="/assets/docs/7a8b3f8d9e7407a8f77206fffbe004ed.png" alt="Preview" width="480" height="190"/></div></div>
    params:
    - name: start
      details: |-
        <p>The start point of the line.</p>
        <p>Must be an array of exactly two relative lengths.</p>
      example: null
      types:
      - array
      strings: []
      default: <code><span class="typ-punct">(</span><span class="typ-num">0pt</span><span
        class="typ-punct">,</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: end
      details: <p>The offset from <code>start</code> where the line ends.</p>
      example: null
      types:
      - none
      - array
      strings: []
      default: <code><span class="typ-key">none</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: length
      details: <p>The line's length. This is only respected if <code>end</code> is
        <code>none</code>.</p>
      example: null
      types:
      - relative length
      strings: []
      default: <code><span class="typ-num">30pt</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: angle
      details: |-
        <p>The angle at which the line points away from the origin. This is only
        respected if <code>end</code> is <code>none</code>.</p>
      example: null
      types:
      - angle
      strings: []
      default: <code><span class="typ-num">0deg</span></code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    - name: stroke
      details: |-
        <p>How to stroke the line. This can be:</p>
        <ul>
        <li>A length specifying the stroke's thickness. The color is inherited,
        defaulting to black.</li>
        <li>A color to use for the stroke. The thickness is inherited, defaulting
        to <code><span class="typ-num">1pt</span></code>.</li>
        <li>A stroke combined from color and thickness using the <code>+</code> operator as
        in <code><span class="typ-num">2pt</span> <span class="typ-op">+</span> red</code>.</li>
        <li>A stroke described by a dictionary with any of the following keys:
        <ul>
        <li><code>paint</code>: The <a href="/docs/reference/types/color/">color</a> to use for the stroke.</li>
        <li><code>thickness</code>: The stroke's thickness as a <a href="/docs/reference/types/length/">length</a>.</li>
        <li><code>cap</code>: How the line terminates. One of <code><span class="typ-str">&quot;butt&quot;</span></code>, <code><span class="typ-str">&quot;round&quot;</span></code>, or
        <code><span class="typ-str">&quot;square&quot;</span></code>.</li>
        <li><code>join</code>: How sharp turns of a contour are rendered. One of
        <code><span class="typ-str">&quot;miter&quot;</span></code>, <code><span class="typ-str">&quot;round&quot;</span></code>, or <code><span class="typ-str">&quot;bevel&quot;</span></code>. Not applicable to lines
        but to <a href="/docs/reference/visualize/polygon/">polygons</a> or <a href="/docs/reference/visualize/path/">paths</a>.</li>
        <li><code>miter-limit</code>: Number at which protruding sharp angles are rendered
        with a bevel instead. The higher the number, the sharper an angle
        can be before it is bevelled. Only applicable if <code>join</code> is
        <code><span class="typ-str">&quot;miter&quot;</span></code>. Defaults to <code><span class="typ-num">4.0</span></code>.</li>
        <li><code>dash</code>: The dash pattern to use. Can be any of the following:
        <ul>
        <li>One of the predefined patterns <code><span class="typ-str">&quot;solid&quot;</span></code>, <code><span class="typ-str">&quot;dotted&quot;</span></code>,
        <code><span class="typ-str">&quot;densely-dotted&quot;</span></code>, <code><span class="typ-str">&quot;loosely-dotted&quot;</span></code>, <code><span class="typ-str">&quot;dashed&quot;</span></code>,
        <code><span class="typ-str">&quot;densely-dashed&quot;</span></code>, <code><span class="typ-str">&quot;loosely-dashed&quot;</span></code>, <code><span class="typ-str">&quot;dash-dotted&quot;</span></code>,
        <code><span class="typ-str">&quot;densely-dash-dotted&quot;</span></code> or <code><span class="typ-str">&quot;loosely-dash-dotted&quot;</span></code></li>
        <li>An <a href="/docs/reference/types/array/">array</a> with alternating lengths for dashes and
        gaps. You can also use the string <code><span class="typ-str">&quot;dot&quot;</span></code> for a length equal to
        the line thickness.</li>
        <li>A <a href="/docs/reference/types/dictionary/">dictionary</a> with the keys <code>array</code> (same as
        the array above), and <code>phase</code> (of type <a href="/docs/reference/types/length/">length</a>),
        which defines where in the pattern to start drawing.</li>
        </ul>
        </li>
        </ul>
        </li>
        </ul>
      example: |-
        <div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span>
        <span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
          spacing<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">,</span>
          <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span> <span class="typ-op">+</span> red<span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>paint<span class="typ-punct">:</span> blue<span class="typ-punct">,</span> thickness<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span> cap<span class="typ-punct">:</span> <span class="typ-str">&quot;round&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>paint<span class="typ-punct">:</span> blue<span class="typ-punct">,</span> thickness<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span> dash<span class="typ-punct">:</span> <span class="typ-str">&quot;dashed&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
          <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>paint<span class="typ-punct">:</span> blue<span class="typ-punct">,</span> thickness<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span> dash<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-str">&quot;dot&quot;</span><span class="typ-punct">,</span> <span class="typ-num">2pt</span><span class="typ-punct">,</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span> <span class="typ-num">2pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        <span class="typ-punct">)</span>
        </code></pre><div class="preview"><img src="/assets/docs/9303d84cfbf70b223f3db8f2afc003d2.png" alt="Preview" width="480" height="190"/></div></div>
      types:
      - length
      - color
      - dictionary
      - stroke
      strings: []
      default: <code><span class="typ-num">1pt</span> <span class="typ-op">+</span>
        black</code>
      positional: false
      named: true
      required: false
      variadic: false
      settable: true
    returns:
    - content
    methods: []
    scope: []
children: []
